#ifndef INTERFACE_H
#define INTERFACE_H

#include <QMainWindow>
#include <QStringList>

namespace Ui {
class interface;
}

class interface : public QMainWindow {
    Q_OBJECT

public:
    explicit interface(QWidget *parent = 0);
    ~interface();

    static int commandNumber;
    static QString line1;
    static QString line2;
    static QString line3;
    static QString line4;
    static QString line5;
    static QString line6;
    static QString line7;
    static QString line8;
    static QString line9;
    static QString line10;
    static QStringList requiredFiles;

    void retrieveCommands();
    void setCommandNumber();
    int getCommandNumber();
    void getCommands();
    void setLine1(QString &);
    void setLine2(QString &);
    void setLine3(QString &);
    void appendLine3(QString &);
    void setLine4(QString &);
    void setLine5(QString &);
    void setLine6(QString &);
    void setLine7(QString &);
    void setLine8(QString &);
    void setLine9(QString &);
    void setLine10(QString &);
    QString getLine1();
    QString getLine2();
    QString getLine3();
    QString getLine4();
    QString getLine5();
    QString getLine6();
    QString getLine7();
    QString getLine8();
    QString getLine9();
    QString getLine10();
    void appendRequiredFileArray(QString &);
    QString combineRequiredFileArray();
    std::string intToString(int);



private:
    Ui::interface *ui;
    QByteArray commandsFile;


private slots:
    void displayAboutANUBISWindow();
    void displayAboutANUBISInterfaceWindow();
    void displayAboutTheTechnetronicsGroupWindow();
    void displayEditDataWindow();
    void displayTutorialsWindow();
    void execute();
    void displayRequiredFilesWindow();
    void on_generateCommandsButton_clicked();
};

#endif // INTERFACE_H
